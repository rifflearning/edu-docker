#! /usr/bin/env bash
# Deployment variables for riffedu AWS instances

################################################################################
# Variables that define the valid deployments of RiffEdu and what version of   #
# the software is deployed there.                                              #
################################################################################

# Valid swarm names (used to index IMAGE_VERS)
# keep alphabetical after 'riffai'
DEPLOY_NAMES=( dev
               cambridge
               coachdiversity
               demo
               esme-learning
               gv-mit
               imperial
               mitsap
               mitsapsloan
               qa
               questrom-bu
               said-oxford
               said-oxford-21
               staging
               udcbrazil
             )

# IMAGE_VERS is an associative array of the DEPLOY_NAMES image versions deployed on that instance
declare -A IMAGE_VERS
IMAGE_VERS=( [dev.riffmm]="6.3.4-riff.0"
             [dev.riffdata]="2.2.1"
             [cambridge.riffmm]="6.1.0-riff.4"
             [cambridge.riffdata]="2.2.1"
             [coachdiversity.riffmm]="5.29.1-riff.1"
             [coachdiversity.riffdata]="2.2.0"
             [demo.riffmm]="6.1.0-riff.4"
             [demo.riffdata]="2.2.0"
             [esme-learning.riffmm]="6.1.0-riff.4"
             [esme-learning.riffdata]="2.2.1"
             [gv-mit.riffmm]="5.29.1-riff.1"
             [gv-mit.riffdata]="2.0.0-dev.11"
             [imperial.riffmm]="6.1.0-riff.4"
             [imperial.riffdata]="2.2.1"
             [mitsap.riffmm]="6.1.0-riff.4"
             [mitsap.riffdata]="2.2.0"
             [mitsapsloan.riffmm]="6.1.0-riff.4"
             [mitsapsloan.riffdata]="2.2.0"
             [qa.riffmm]="6.3.4-riff.0"
             [qa.riffdata]="2.2.1"
             [questrom-bu.riffmm]="5.34.2-riff.2"
             [questrom-bu.riffdata]="2.2.0"
             [said-oxford.riffmm]="6.1.0-riff.4"
             [said-oxford.riffdata]="2.2.0"
             [said-oxford-21.riffmm]="5.34.2-riff.2"
             [said-oxford-21.riffdata]="2.2.0"
             [staging.riffmm]="6.3.4-riff.0"
             [staging.riffdata]="2.2.1"
             [udcbrazil.riffmm]="5.29.1-riff.1"
             [udcbrazil.riffdata]="2.2.1"
           )

################################################################################
# InArray                                                                      #
#   Test if $1 is in an indexed array named $2                                 #
#   May produce false positives if any members of the array contain spaces     #
################################################################################
InArray()
{
    local _array_ref_=$2[*]
    [[ " ${!_array_ref_} " =~ " $1 " ]]
}

################################################################################
# ClearDeployVars                                                              #
################################################################################
ClearDeployVars()
{
    unset DEPLOY_SWARM
    unset RIFFMM_TAG
    unset RIFFDATA_TAG
}

################################################################################
################################################################################
# Main program                                                                 #
################################################################################
################################################################################

# The clear option says just unset ALL variables
if [ "$1" == "--clear" ]
then
    ClearDeployVars
    return
fi

# If we were given a swarm name as an argument, make sure that all the derived parameters are
# unset in case it is invalid, but leave them alone if no argument was given.
if [[ -n "$1" ]]
then
    if ! InArray "$1" DEPLOY_NAMES
    then
        echo "'$1' is not a valid deployment name, it must be one of: '${DEPLOY_NAMES[*]}'"
        echo "--- Aborting! ---"
        echo
    fi

    REQ_DEPLOY=$1
    ClearDeployVars
else
    REQ_DEPLOY=$DEPLOY_SWARM
fi

# If we were given a valid swarm name as an argument, use it to populate the deployment environment vars
if [[ -v IMAGE_VERS[$REQ_DEPLOY.riffmm] ]]
then
    export DEPLOY_SWARM=$REQ_DEPLOY
    # The docker-compose.yml file uses these values to determine which image to deploy to the swarm
    export RIFFMM_TAG=${IMAGE_VERS[$DEPLOY_SWARM.riffmm]}
    export RIFFDATA_TAG=${IMAGE_VERS[$DEPLOY_SWARM.riffdata]}
fi
